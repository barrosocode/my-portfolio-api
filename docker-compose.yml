version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
            - ./php.ini:/usr/local/etc/php/php.ini
        depends_on:
            - db # Garantir que o banco de dados esteja pronto antes
        networks:
            - laravel_network

    webserver:
        image: nginx:latest
        container_name: laravel_webserver
        volumes:
            - .:/var/www/html
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8000:80"
        networks:
            - laravel_network

    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: laravel
        ports:
            - "3306:3306"
        volumes:
            - db_data:/var/lib/mysql
        networks:
            - laravel_network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            PMA_HOST: db
            MYSQL_ROOT_PASSWORD: root
        ports:
            - "8080:80"
        networks:
            - laravel_network

volumes:
    db_data:

networks:
    laravel_network:
#=============================================

# version: "3.8"

# services:
#     app:
#         image: php:8.2-fpm
#         container_name: laravel_app
#         working_dir: /var/www/html
#         volumes:
#             - .:/var/www/html
#             - ./php.ini:/usr/local/etc/php/php.ini
#         networks:
#             - laravel_network
#         build:
#             context: .
#             dockerfile: Dockerfile

#     webserver:
#         image: nginx:alpine
#         container_name: laravel_webserver
#         restart: unless-stopped
#         volumes:
#             - .:/var/www/html
#             - ./nginx.conf:/etc/nginx/conf.d/default.conf
#         ports:
#             - "8000:80"
#         networks:
#             - laravel_network

#     db:
#         image: mysql:8.0
#         container_name: laravel_db
#         restart: unless-stopped
#         environment:
#             MYSQL_ROOT_PASSWORD: root
#             MYSQL_DATABASE: laravel
#             MYSQL_USER: laravel
#             MYSQL_PASSWORD: laravel
#         ports:
#             - "3306:3306"
#         volumes:
#             - db_data:/var/lib/mysql
#         networks:
#             - laravel_network

#     phpmyadmin:
#         image: phpmyadmin/phpmyadmin
#         container_name: phpmyadmin
#         environment:
#             PMA_HOST: db
#             MYSQL_ROOT_PASSWORD: root
#         ports:
#             - "8080:80"
#         networks:
#             - laravel_network

# volumes:
#     db_data:

# networks:
#     laravel_network:

#====================================

# version: '3.8'

# services:
#   app:
#     image: php:8.2-fpm
#     container_name: laravel_app
#     working_dir: /var/www/html
#     volumes:
#       - .:/var/www/html
#       - ./php.ini:/usr/local/etc/php/php.ini
#     networks:
#       - laravel_network
#     build:
#       context: .
#       dockerfile: Dockerfile

#   db:
#     image: mysql:8.0
#     container_name: laravel_db
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: laravel
#       MYSQL_USER: laravel
#       MYSQL_PASSWORD: laravel
#     ports:
#       - "3306:3306"
#     networks:
#       - laravel_network

#   phpmyadmin:
#     image: phpmyadmin/phpmyadmin
#     container_name: phpmyadmin
#     environment:
#       PMA_HOST: db
#       MYSQL_ROOT_PASSWORD: root
#     ports:
#       - "8080:80"
#     networks:
#       - laravel_network

# networks:
#   laravel_network:
#     driver: bridge
